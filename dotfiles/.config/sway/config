set $mod Mod4

set $browser firefox
set $file_manager pcmanfm
# set $term alacritty
set $term foot

set $left h
set $down j
set $up k
set $right l

set $mon1 DP-3
set $mon2 HDMI-A-1


font pango:Hack 7

default_border pixel 1

smart_borders on
smart_gaps on

gaps inner 4px
gaps outer 4px


client.focused                  #82b500         #3e5700         #fffff0         #200000       #900000

# class                         border          background      text            indicator       child_border
# client.focused                  #ffff33         #000000         #fffff0         #900000       #000000
# client.focused_inactive         #333333         #000000         #fffff0         #900000       #000000
# client.unfocused                #333333         #000000         #888888         #900000       #000000
# client.urgent                   #2f343a         #900000         #fffff0         #900000       #900000
# client.placeholder              #000000         #000000         #fffff0         #900000       #0c0c0c





# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output $mon1 bg ~/Pictures/wallpaper_mac_2.png fill
output $mon2 bg ~/Pictures/wallpaper_mac_1.png fill

output $mon1 resolution 1920x1080@240hz position 1920,0
output $mon2 resolution 1920x1080@60hz position 0,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# assign [class="firefox"] workspace number 1


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:pointer" accel_profile flat


input type:keyboard {
    xkb_layout us,rs(latinunicode)
    xkb_options grp:alt_shift_toggle
}

### Key bindings
#
# Basics:
#
    floating_modifier $mod normal
    # Start a terminal


    # bindsym $mod+a exec --no-startup-id ~/.config/rofi/scripts/launcher.sh
    # bindsym $mod+Shift+a exec --no-startup-id ~/.config/rofi/scripts/allapps.sh
    # bindsym $mod+s exec --no-startup-id ~/.config/rofi/scripts/shortcuts.sh
    # bindsym $mod+o exec --no-startup-id ~/.config/rofi/scripts/window.sh
    # bindsym $mod+Shift+w exec --no-startup-id ~/.config/rofi/scripts/powermenu.sh
    # bindsym Print exec --no-startup-id ~/.config/rofi/scripts/screenshot.sh
    bindsym $mod+Return exec $term
    bindsym $mod+q exec $browser
    bindsym $mod+e exec $file_manager

    # Kill focused window
    bindsym $mod+w kill

    # Start your launcher
    bindsym $mod+a exec ~/.config/wofi/scripts/launch.sh drun
    bindsym $mod+Shift+a exec ~/.config/wofi/scripts/wofi.sh run
    bindsym $mod+Shift+w exec ~/.config/wofi/scripts/shutdown-menu.sh
    bindsym $mod+Shift+q exec ~/.config/wofi/scripts/screenshot.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left 130px
    bindsym $mod+Shift+$down move down 130px
    bindsym $mod+Shift+$up move up 130px
    bindsym $mod+Shift+$right move right 130px

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 0

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1; workspace 1
    bindsym $mod+Shift+2 move container to workspace 2; workspace 2
    bindsym $mod+Shift+3 move container to workspace 3; workspace 3
    bindsym $mod+Shift+4 move container to workspace 4; workspace 4
    bindsym $mod+Shift+5 move container to workspace 5; workspace 5
    bindsym $mod+Shift+6 move container to workspace 6; workspace 6
    bindsym $mod+Shift+7 move container to workspace 7; workspace 7
    bindsym $mod+Shift+8 move container to workspace 8; workspace 8
    bindsym $mod+Shift+9 move container to workspace 9; workspace 9
    bindsym $mod+Shift+0 move container to workspace 0; workspace 0
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.


bindsym $mod+ctrl+$left resize shrink width 130 px 
bindsym $mod+ctrl+$up resize grow height 130 px 
bindsym $mod+ctrl+$down resize shrink height 130 px 
bindsym $mod+ctrl+$right resize grow width 130 px 

bindsym $mod+g move down 130px move right 130px

workspace 1 output $mon1
workspace 2 output $mon1
workspace 3 output $mon1
workspace 4 output $mon1
workspace 5 output $mon1
workspace 6 output $mon2
workspace 7 output $mon2
workspace 8 output $mon2
workspace 9 output $mon2
workspace 0 output $mon2



# title_align center


#
# Layout stuff:
#
# split in horizontal orientation
bindsym $mod+v split h

# split in vertical orientation
bindsym $mod+c split v


# Toggle bar
# bindsym $mod+b bar mode invisible
bindsym $mod+b bar mode toggle



# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen

bindsym $mod+Tab layout toggle stacking tabbed split

workspace_layout tabbed

bindsym $mod+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+n focus parent

# focus the child container
bindsym $mod+m focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
# mode "resize" {
#     # left will shrink the containers width
#     # right will grow the containers width
#     # up will shrink the containers height
#     # down will grow the containers height
#     bindsym $left resize shrink width 10px
#     bindsym $down resize grow height 10px
#     bindsym $up resize shrink height 10px
#     bindsym $right resize grow width 10px
#
#     # Return to default mode
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     swaybar_command waybar
# }


bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%H:%M:%S %d/%m/%Y'; do sleep 1; done

    colors {
        statusline #fffff0
        # background #323232
        background #000000
        focused_workspace #82b500 #335700 #fffff0
    }
}

include /etc/sway/config.d/*

# redshift
exec gammastep -P -O 1300
